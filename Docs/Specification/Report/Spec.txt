1.	 Specification
1.1.	Description
1.1.1.	Product Purpose
Our product is a cleaning agent searching software, featured with quick off-line searching,
modifying and commenting about cleaning agent based on customers’ needs and favorites. 
It is available on desktop computers and android mobile devices. 
1.1.2.	Product Scope
Our product provides three different languages, including Chinese, English and German, 
containing most commonly used cleaning agent in China and Germany.
1.1.3.	Potential Customers
This product is specially designed for those who travel, work or study abroad; 
aiming to assist them to easily find the right cleaning agent in an unfamiliar cultural context.

1.2.	Product functions
- Search cleaning agents:
	* Search cleaning agents by tags.
	* Search cleaning agents by keywords.
	* Combined search with both tags and keyword. "And" logic is used.
- Add, modify and delete
	* User can add, modify and delete a cleaning agent and a tag.
- Memo:
	* User can take a memo on a certain cleaning agent.
	* User can find all memos in the user center.
- Set preference:
	* The software serves an unique user on a same device.
	* User can log in with user name.
	* System would greet the user by the user name.
	* User can choose interface and content languages.
	* User can enable God mode and violate system protection.

1.3.	User characteristics
Users are assumed to:
1.	have basic computer operation knowledge, such as log in, GUI interaction and typing.
2.	be uninfected with hearing, vision, touching and any other kinds of disability.
3.	speak at least one of the following language: Chinese, English and German.	
4.	be oversea students, business or casual travelers in the following country: China and Germany.	
5.	have basic knowledge in choosing cleaning agent and cleaning.
6.	have either a computer or an Android mobile phone.
7.	have access to cleaning agents in nearby supermarket.
Users need the software to:
-	find a cleaning agent by its purpose.
-	find a cleaning agent through its name, brand, description or other attributes.
-	get detail information of a cleaning agent
-	get multiple language contents of certain information.
-	add new cleaning agents and tags and take memos.

1.4.	Functional requirements
1.4.1.	Presentation
- Display the search result
	* Related cleaning agents shall be displayed in the form of a table with headers.
	* Each cleaning agent can be selected and the detail information of which can be displayed.
- Display the cleaning agent detail window
	* User cannot edit in detail window except taking memo.
	* There is an entry to modify the cleaning agent.
- Display tag modify window
	* Window shall highlight the tag or switch to a certain category tab based on user desire.
1.4.2. Content
- Cleaning agent
	* Provide information including: /////
	* Special announcement: Application time and frequency are only related to a certain cleaning agent. This information indicates the common use case of the cleaning agent. It is not instructional information of applying the cleaning agent in a specific scenario, but a general reference. Specific application time and frequency can be recored in "Instruction" field. We are not intending to teach user how to clean but assist the user to find the right cleaning agent.

	* Database arrangement:
	///////
- Tag
	* Provide information including: /////
	* Database arrangement:
	///////

- Relation
	* Tag cleaning agent relation
	* Tag and Tag relation

1.4.3.	Add, modify and delete
- Cleaning agents
	* New cleaning agent must have a name.
	* User cannot do anything to a system predefined cleaning agent unless God mode is enabled.
	* In God mode the user shall also be notified when editing a system predefined cleaning agent.
	* User has no restriction of manipulating a user defined cleaning agent.
	* User can either abort an edit by clicking "Cancel" or confirm an edit by clicking "Save".
	* User input shall be checked especially numbers.
- Tags
	* New tag must have a name.
	* User cannot do anything to a system predefined tag unless God mode is enabled.
	* In God mode the user shall also be notified when editing a system predefined tag.
	* User has no restriction of manipulating a user defined tag.
	* User will be warned when he or she try to add a tag which is already there.
- Memo
	* Memo and cleaning agent is one to one relation.
	* Memo is always and only related to a cleaning agent.
	* User can modify a memo in any case no matter whether the cleaning agent is system predefined or not.
	* All memos are listed in user center. The latest memo will be displayed in the first place.
1.4.4.	Search
- The keywords shall be:
	* Separated by common delimiters including but not limited to space, colon, semicolon and etc.
	* Language insensitive.
	* Case insensitive.
	* Partially compared.
	* Search will be cascaded from a cleaning agent to its elated tags and all other attributes.
	* Each pattern match of a cleaning agent contributes to its relevance index.
	* Full word match has higher weight of relevance.
	* Tag match has higher weight of relevance.
	* containing unrestricted number of words.
	* Clicking on "Clear" will remove keywords in input field.
- The tags shall be:
	* Separated in three categories which are "Rooms", "Items" and "Others".
	* selected only one in each category.
	* "And" logic is used between tags.
	* Clicking on "Clear" will remove tag selections.
- Search result shall be:
	* All cleaning agent if no tags or keywords are specified.
	* Combining tags and keywords result by "and" logic.
	* Ranked by relevance.
	* Shown with "origin", "name" and "tags" fields.
	* Presented in real-time during inserting keywords and selecting tags.
	* Limited to 100 in number.
	* Number of result will be displayed.
1.4.5.	Language
- The software GUI supports: Chinese, English and German.
- The content is prepared in: Chinese, English and German. Contents of different languages are provided in different tabs and can be switched during software run time.
- Changing language setting will result in software restart.
- Unspecified string of a certain language can and will always be replaced by a string of another language if there is one available.
1.5.	Non-functional requirements
1.5.1.	Portability
•	The software has two distinctive sub versions which support desktop computers and Android devices.
- Windows 10 and OS X El Capitan with Java SE Runtime Environment 8u91 are fully tested.
- Android should run on 4.1–4.1.2 Jelly Bean (API level 16) or later.
1.5.2.	Performance and Availability
•	The software shall start up and greet the user for 500ms.
•	Search result shall be presented in less than 1 second.
•	The software shall be always available during runtime.
1.5.3.	Security and Extensibility
•	User data and system data are stored with database specific security.
•	The software is not designed to extend.

2.	UML Specification
2.1.	 Use Cases
2.2.	 Class Diagrams

3.	 GUI Design
3.1. User experience
- Theme style and feel
- Cross platform consistence
3.2.	Structure
3.3.	Screenshots



























